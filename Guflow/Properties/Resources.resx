<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cyclic_dependency" xml:space="preserve">
    <value>Workflow item {0} depends on itself</value>
  </data>
  <data name="Domain_deprecated" xml:space="preserve">
    <value>Domain {0} is decprecated.</value>
  </data>
  <data name="Domain_name_missing" xml:space="preserve">
    <value>Domain is missing.</value>
  </data>
  <data name="Domain_name_required" xml:space="preserve">
    <value>Domain name required.</value>
  </data>
  <data name="Duplicate_activity" xml:space="preserve">
    <value>Activity with name {0}, version {1} and positional markerName {2} is already added to workflowClosingActions.</value>
  </data>
  <data name="Duplicate_timer" xml:space="preserve">
    <value>Timer with name {0} is already added to workflowClosingActions.</value>
  </data>
  <data name="Empty_version" xml:space="preserve">
    <value>Version is empty for {0}.</value>
  </data>
  <data name="Invalid_parameter" xml:space="preserve">
    <value>Workflow method {0} has incompatible parameter {1}, which can not be deserialized from source event {2}</value>
  </data>
  <data name="Invalid_return_type" xml:space="preserve">
    <value>Workflow method {0} has invalid return type. Only {1} and {2} are allowed as return types.</value>
  </data>
  <data name="Multiple_event_methods" xml:space="preserve">
    <value>Multiple workflow methods are found for event {0}. Please provide only one method.</value>
  </data>
  <data name="Non_Workflow_type" xml:space="preserve">
    <value>Workflow type {0} does not derive from {1} class.</value>
  </data>
  <data name="No_workflow_to_host" xml:space="preserve">
    <value>Empty workflows. Please provide at least one workflow to begin hosting.</value>
  </data>
  <data name="Read_strategy_required" xml:space="preserve">
    <value>Read startegy is required.</value>
  </data>
  <data name="Schedulable_item_missing" xml:space="preserve">
    <value>Can not find the schedulable item for {0}.</value>
  </data>
  <data name="TaskListName_required" xml:space="preserve">
    <value>TaskList name is required.</value>
  </data>
  <data name="Workflow_already_hosted" xml:space="preserve">
    <value>Workflow name {0} and version {1} is already hosted.</value>
  </data>
  <data name="Workflow_attribute_missing" xml:space="preserve">
    <value>WorkflowDescriptionAttribute is not applied on workflow {0}.</value>
  </data>
  <data name="Workflow_deprecated" xml:space="preserve">
    <value>Workflow name {0} and version {1} is deprecated. </value>
  </data>
  <data name="Workflow_not_hosted" xml:space="preserve">
    <value>Workflow name {0} and version {1} is not hosted.</value>
  </data>
  <data name="Can_not_determine_the_task_list_to_poll_on" xml:space="preserve">
    <value>Can not determine the task list to poll on for new tasks when multiple workflows are hosted. Please explicitly pass the task list to begin the execution. </value>
  </data>
  <data name="Default_task_list_is_missing" xml:space="preserve">
    <value>Default task list is missing. Please either provide default task list in workflow declaration or pass the one explicitly to begin the execution</value>
  </data>
  <data name="Workflow_execution_already_stopped" xml:space="preserve">
    <value>Workflow execution is already stopped.</value>
  </data>
  <data name="Activity_attribute_missing" xml:space="preserve">
    <value>ActivityDescriptionAttribute is not applied on activity {0}.</value>
  </data>
  <data name="Non_activity_type" xml:space="preserve">
    <value>Activity type {0} does not derive from {1} class.</value>
  </data>
  <data name="Activity_already_hosted" xml:space="preserve">
    <value>Activity name {0} and version {1} is already hosted.</value>
  </data>
  <data name="Activity_not_hosted" xml:space="preserve">
    <value>Activity name {0} and version {1} is not hosted.</value>
  </data>
  <data name="No_activity_to_host" xml:space="preserve">
    <value>Empty activities. Please provide at least one activity to begin hosting.</value>
  </data>
</root>